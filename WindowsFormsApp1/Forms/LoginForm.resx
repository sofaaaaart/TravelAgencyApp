<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>